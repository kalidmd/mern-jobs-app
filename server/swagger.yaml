openapi: 3.0.0
info:
  title: MERN-Jobs-App
  contact: {}
  version: '1.0'
servers:
- url: https://mern-jobs-app-llm4.onrender.com/api/v1
  variables: {}
paths:
  /users/register:
    post:
      tags:
      - Auth
      summary: Register Users
      operationId: RegisterUsers
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RegisterUsersRequest'
              - example:
                  name: Tomas
                  email: tomas@gmail.com
                  password: tomas@123
            example:
              name: Tomas
              email: tomas@gmail.com
              password: tomas@123
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /users/login:
    post:
      tags:
      - Auth
      summary: Login
      operationId: Login
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/LoginRequest'
              - example:
                  email: kalid@gmail.com
                  password: '12345678'
            example:
              email: kalid@gmail.com
              password: '12345678'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /jobs:
    get:
      tags:
      - Jobs
      summary: Get All Jobs
      operationId: GetAllJobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    post:
      tags:
      - Jobs
      summary: Create Job
      operationId: CreateJob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateJobRequest'
              - example:
                  company: SpaceX
                  position: Frontend Dev
                  status: declined
            example:
              company: SpaceX
              position: Frontend Dev
              status: declined
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The Job ID
    get:
      tags:
      - Jobs
      summary: Get SIngle Job
      operationId: GetSIngleJob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  
    delete:
      tags:
      - Jobs
      summary: Delete Job
      operationId: DeleteJob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
      
    put:
        tags:
        - Jobs
        summary: Update Job
        operationId: UpdateJob
        parameters: []
        requestBody:
          description: ''
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/UpdateJobRequest'
                - example:
                    company: updated job
                    position: updated
              example:
                company: updated job
                position: updated
          required: true
        responses:
          '200':
            description: ''
            headers: {}
        deprecated: false
        security:
        - bearer: []    
  /users/dashboard:
    get:
      tags:
      - Jobs
      summary: Dashboard
      operationId: Dashboard
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
components:
  schemas:
    RegisterUsersRequest:
      title: RegisterUsersRequest
      required:
      - name
      - email
      - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: Tomas
        email: tomas@gmail.com
        password: tomas@123
    LoginRequest:
      title: LoginRequest
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: kalid@gmail.com
        password: '12345678'
    CreateJobRequest:
      title: CreateJobRequest
      required:
      - company
      - position
      - status
      type: object
      properties:
        company:
          type: string
        position:
          type: string
        status:
          type: string
      example:
        company: SpaceX
        position: Frontend Dev
        status: declined
    UpdateJobRequest:
      title: UpdateJobRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: updated job
        position: updated
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
# - name: Misc
#   description: ''
- name: Auth
  description: ''
- name: Jobs
  description: ''